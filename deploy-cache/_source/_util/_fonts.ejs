<% for(var i=0; i<fonts.length; i++) { %><% if (fonts[i].source === 'fontface' && fonts[i].files !== undefined) { %>
$font_embedded_<%= fonts[i].name %>: false;<% }; %><% }; %>

@mixin embed_font($font_name) {
  <% var first = true %>@at-root {<% for(var i=0; i<fonts.length; i++) { %><% if (fonts[i].source === 'fontface' && fonts[i].files !== undefined) { %>
    @<% if (!first) { %>else <% } %>if $font_name == '<%= fonts[i].name %>' {
      @if $font_embedded_<%= fonts[i].name %> == false {
        $font_embedded_<%= fonts[i].name %>: true;
        @font-face {
            font-family: <%- fonts[i].fontFamily %>;
            src: url('<%= fonts[i].files.eot %>');
            src: url('<%= fonts[i].files.eot %>?#iefix') format('embedded-opentype')<% if (fonts[i].files.woff2 !== undefined) { %>,
                 url('<%= fonts[i].files.woff2 %>') format('woff2')<% } %><% if (fonts[i].files.woff !== undefined) { %>,
                 url('<%= fonts[i].files.woff %>') format('woff')<% } %>;
            font-style: <%= fonts[i].fontStyle %>;
            font-weight: <%= fonts[i].fontWeight %>;
            font-display: swap;
        }
      }
    }<% first = false %><% }; %><% }; %>
  }
}

// Embed fonts from font service or hosted locally
@mixin font($font_name) {
  $font_family: '';
  $font_fallbacks: sans-serif !default;
  $font_weight: normal !default;
  $font_style: normal !default;
<% for(var i=0; i<fonts.length; i++) { %>
  @<% if (i !== 0) { %>else <% } %>if $font_name == '<%= fonts[i].name %>' {
    $font_family: <%- fonts[i].fontFamily %>;
    $font_fallbacks: <%- fonts[i].fallbackStack %>;
    $font_style: <%- fonts[i].fontStyle %>;
    $font_weight: <%- fonts[i].fontWeight %>;
  }<% }; %>

  font: {
    family: $font_family, $font_fallbacks;
    weight: $font_weight;
    style: $font_style;
  }
  
  @include embed_font($font_name);
}