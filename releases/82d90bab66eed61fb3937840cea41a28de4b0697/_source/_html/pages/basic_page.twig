{# @var craft \craft\web\twig\variables\CraftVariable #}
{# @var entry \craft\elements\Entry #}

{#
 # The default page layout used for Basic Page entries.
 # To use this layout on other channels, extend this template instead of "_layout".
 #}

{% extends "_layout.twig" %}

{% import 'macros/component.twig' as component %}

{% set pageSection = pageSection ?? 'inside' %}
{% set hideTitle = entry.hideTitle %}

{% if entry is defined and entry.type.handle == 'newsExternal' %}
    {% redirect craft.entries.section('news').one().url %}
{% endif %}

{% block critcss %}
    <style>{{ source('_critcss/inside.css', ignore_missing = true) }}</style>
    <style>{{ source('_critcss/hero.css', ignore_missing = true) }}</style>
{% endblock %}

{% block content %}

    {% set hero_vars = {
        image: entry.heroImage.all() ?? false,
        imagePadding: entry.heroMobileImageSize ?? false,
        legacyFullWidth: entry.legacyFullWidth ?? false,
        curvedDesign: entry.curvedDesign ?? false,
        style: entry.heroStyleOptions ?? false,
        smallHeader: entry.heroSmallHeader ?? false,
        header: entry.heroHeader ?? false,
        text: entry.heroText ?? false,
        ctaLink: entry.heroCallToActionLink.one().url ?? false,
        ctaText: entry.heroCallToActionText ?? false,
        ctaAriaLabel: entry.heroCallToActionAriaLabel ?? false
    } %}

{% if hideTitle is same as(false) %}
    {% include 'partials/title_and_breadcrumbs' with {entry_title: entry.title, entry_id: entry.id} %}
{% endif %}

    {% include 'partials/hero' with hero_vars %}


{% if hideLegacyComponents is same as(false) %}
        <div class="content inner_wrapper">
            <article class="body">
            {% cache %}
                {% for block in entry.bodyContent.all() %}
                    {% switch block.type %}
                        {% case 'header' %}
                            <div class="body__header">
                                {% set headerLevel = 'h3' %}
                                {% if block.headerType.value == 'sectionHeader' %}
                                    {% set headerLevel = 'h2' %}
                                {% endif %}
                                <{{ headerLevel }} id="{{ block.text|kebab }}" class="{% if block.headerType.value == 'sectionHeader' %}c_section_header{% elseif block.headerType == 'sectionSubheader' %}c_section_subheader{% endif %}">{{ block.text }}</{{ headerLevel }}>
                            </div>
                        {% case 'text' %}
                            <div class="body__text">
                                <div class="c_text">{{ block.text }}</div>
                            </div>
                        {% case 'button' %}
                            <div class="body__button body__button--{{ block.buttonPosition.value }}">
                                {% import 'macros/component.twig' as component %}
                                {% set options = {
                                    label: block.buttonLabel|length ? block.buttonLabel : 'Learn More',
                                    target: block.buttonCustomLink|length ? '_blank' : false,
                                    url: block.buttonCustomLink|length ? block.buttonCustomLink : block.buttonLinkToAnEntry.one()|length ? block.buttonLinkToAnEntry.one().url : false,
                                } %}
                                {{ component.c('button', options) }}
                            </div>
                        {% case 'fullWidthMedia' %}
                            {% if block.youtubeId ?? false or block.image.one() ?? false  %}
                                <div class="body__media">
                                    {% if block.youtubeId ?? false %}
                                        {% import 'macros/component.twig' as component %}
                                        {% set options = {
                                            source: 'youtube',
                                            videoId: block.youtubeId,
                                        } %}
                                        {{ component.c('video', options) }}
                                    {% elseif block.image.one() ?? false %}
                                        {% import 'macros/component.twig' as component %}
                                        {% set options = {
                                            image: block.image.one(),
                                            alt: block.image.one().altText ?? '',
                                            lazyLoad: false,
                                            imager: {
                                                transforms: [
                                                    { width: 1200, jpegQuality: 80 },
                                                    { width: 600, jpegQuality: 80 },
                                                ]
                                            }
                                        } %}
                                        {{ component.c('image', options) }}
                                    {% endif %}
                                </div>
                            {% endif %}
                        {% case 'mediaAndText' %}
                            {% if block.youtubeId ?? false or block.image.one() ?? false or block.text ?? false %}
                                <div class="body__media_and_text">
                                    {% if block.youtubeId ?? false or block.image.one() ?? false %}
                                        <div class="body__media_and_text__media {% if block.mediaPosition.value == 'right' %}body__media_and_text__media--right{% endif %}">
                                            {% if block.youtubeId ?? false %}
                                                {% import 'macros/component.twig' as component %}
                                                {% set options = {
                                                    source: 'youtube',
                                                    videoId: block.youtubeId,
                                                } %}
                                                {{ component.c('video', options) }}
                                            {% elseif block.image.one() ?? false %}
                                                {% import 'macros/component.twig' as component %}
                                                {% set options = {
                                                    image: block.image.one(),
                                                    alt: block.image.one().altText ?? '',
                                                    lazyLoad: false,
                                                    imager: {
                                                        transforms: [
                                                            { width: 1200, jpegQuality: 80 },
                                                            { width: 600, jpegQuality: 80 },
                                                        ]
                                                    }
                                                } %}
                                                {{ component.c('image', options) }}
                                            {% endif %}
                                        </div>
                                    {% endif %}
                                    {% if block.text ?? false %}
                                        <div class="body__media_and_text__text {% if block.mediaPosition.value == 'right' %}body__media_and_text__text--left{% endif %} {% if not block.youtubeId|length and not block.image.one()|length %}body__media_and_text__text--full{% endif %}">
                                            {{ block.text }}
                                        </div>
                                    {% endif %}
                                </div>
                            {% endif %}
                        {% case 'accordion' %}
                            <div class="body__accordion">
                                <accordion id="{{ block.id }}">
                                    {% for row in block.accordion %}
                                        <accordion-tab {% if loop.first %}:selected="true"{% endif %} title="{{ row.title }}" id="{{ block.id }}" class="body__accordion__tab">
                                            <h4 slot="tab_title" class="body__accordion__tab__title">
                                                <button aria-expanded="{% if loop.first %}true{% else %}false{% endif %}">
                                                    <span class="c_section_subheader">{{ row.title }}</span>
                                                    <span class="c_button c_button--outline">{% if block.dropDownButtonLabel %}{{ block.dropDownButtonLabel }}{% else %}Read More{% endif %} <span aria-hidden="true">{{ svg('@basePath/icon/arrow_go.svg') }}</span></span>
                                                </button>
                                            </h4>
                                            <div class="body__accordion__tab__content" hidden>
                                                <div class="body__accordion__tab__content__inner">
                                                {{ row.content|markdown }}
                                                </div>
                                            </div>
                                        </accordion-tab>
                                    {% endfor %}
                                </accordion>
                            </div>
                        {% case 'accordionOfIndividuals' %}
                            <div class="body__accordion body__accordion--individuals">
                                <accordion id="{{ block.id }}">
                                    {% for person in block.individuals.all() %}
                                        <accordion-tab {% if loop.first %}:selected="true"{% endif %} title="{{ person.title }}" id="{{ block.id }}" class="body__accordion__tab">
                                            <div class="body__accordion__tab__title {% if person.individualImage.one() ?? false %}body__accordion__tab__title--image{% endif %}" slot="tab_title">
                                                {% if person.individualImage.one() ?? false %}
                                                    {% import 'macros/component.twig' as component %}
                                                    {% set options = {
                                                        image: person.individualImage.one(),
                                                        alt: person.individualImage.one().altText ?? '',
                                                        lazyLoad: false,
                                                        imager: {
                                                            transforms: [
                                                                { width: 1200, height:800, jpegQuality: 80, position: person.individualImage.one().getFocalPoint() },
                                                                { width: 600, height:400, jpegQuality: 80, position: person.individualImage.one().getFocalPoint() },
                                                            ]

                                                        }
                                                    } %}
                                                    {{ component.c('image', options) }}
                                                {% endif %}
                                                <button aria-expanded="{% if loop.first %}true{% else %}false{% endif %}">
                                                    <span class="c_section_header">{{ person.title }}</span>
                                                    {% if person.position ?? false %}<span class="c_section_subheader">{{ person.position }}</span>{% endif %}
                                                    <span class="c_button c_button--outline {% if currentSite.language == 'es' %}c_button--hide_translate{% endif %}"><span class="c_button__label">{% if block.dropDownButtonLabel %}{{ block.dropDownButtonLabel }}{% else %}{{ "Read More"|t }}{% endif %}</span> <span class="c_button__icon" aria-hidden="true">{{ svg('@basePath/icon/arrow_go.svg') }}</span></span>
                                                </button>
                                            </div>
                                            <div class="body__accordion__tab__content" hidden>
                                                <div class="body__accordion__tab__content__inner">
                                                    {{ person.aboutIndividual }}
                                                </div>
                                            </div>
                                        </accordion-tab>
                                    {% endfor %}
                                </accordion>
                            </div>
                        {% case 'table' %}
                            <table class="c_table">
                            <thead>
                                <tr>
                                {% for col in block.table.columns %}
                                <th {% if col.align ?? false %}style="text-align:{{ col.align }};"{% endif %} {% if col.width ?? false %}width="{{ col.width }}"{% endif %} scope="col">{{ col.heading }}</th>
                                {% endfor %}
                                </tr>
                            </thead>

                            <tbody>
                                {% for row in block.table.rows %}
                                    <tr scope="row">
                                    {% for cell in row %}
                                    <td {% if block.table.columns[loop.index0].align ?? false %}style="text-align:{{ block.table.columns[loop.index0].align }};"{% endif %} data-header="{{ block.table.columns[loop.index0].heading }}"><div><span class="visually-hidden">{{ block.table.columns[loop.index0].heading }}</span>{{ cell|replace(':check:','<span class="check">&#x2713;</span>')|replace(':x:','<span class="x">&#10005;</span>')|raw }}</div></td>
                                    {% endfor %}
                                    </tr>
                                {% endfor %}
                            </tbody>

                            </table>
                        {% case 'jobOpenings' %}
                            {% if block.jobOpenings.all()|length %}
                                <div class="body__text">
                                    <div class="c_text">
                                        {% for jobOpening in block.jobOpenings.all() %}
                                            <p><a href="{{ jobOpening.url }}">{{ jobOpening.title }}</a></p>
                                        {% endfor %}
                                    </div>
                                </div>
                            {% endif %}
                    {% endswitch %}
                {% endfor %}
                {% endcache %}

                {% if entry.selectAForm ?? false %}
                    {% set formHandle = entry.selectAForm.handle %}

                    <div class="body__form">
                        {% import 'macros/component.twig' as component %}
                        {% set formFields = [] %}
                        {% set hiddenField_formId = {
                            type: 'hidden',
                            name: 'formId',
                            value: craft.freeform.form(formHandle).id
                        } %}
                        {% set hiddenField_originPage = {
                            type: 'hidden',
                            name: 'originPage',
                            value: entry.slug
                        } %}
                        {% set hiddenField_csrf = {
                            type: 'hidden',
                            name: craft.app.config.general.csrfTokenName,
                            value: craft.app.request.csrfToken
                        } %}
                        {% set formFields = formFields|merge([hiddenField_formId]) %}
                        {% set formFields = formFields|merge([hiddenField_originPage]) %}
                        {% set formFields = formFields|merge([hiddenField_csrf]) %}



                        {% for row in craft.freeform.form(formHandle) %}
                            {% for field in row %}
                                {% set validateField = false %}
                                {% if field.type == 'email' or  field.type ==  'text' or field.type ==  'phone' or field.type ==  'tel' or field.type ==  'zip' %}
                                    {% set validateField = 'phone' in field.handle ? 'tel' : field.type %}
                                {% endif %}

                                {% set field = {
                                    type: field.type,
                                    label: field.type == 'submit' ? null : field.label,
                                    value: field.value,
                                    name: field.handle,
                                    required: field.required,
                                    placeholder: field.placeholder ?? false,
                                    options: field.options ?? false,
                                    validate: validateField,
                                    formId: craft.freeform.form(formHandle).id
                                } %}
                                {% set formFields = formFields|merge([field]) %}
                            {% endfor %}
                        {% endfor %}
                        {% set formActionUrl = 'form/confirmation' %}
                        {% if currentSite.language == 'es' %}
                            {% set formActionUrl = 'es/formulario/confirmación' %}
                        {% endif %}
                        {% set options = {
                            actionUrl: formActionUrl,
                            validate: true,
                            formId: craft.freeform.form(formHandle).id,
                            fields: formFields
                        } %}
                        {{ component.c('form', options) }}
                    </div>
                {% endif %}

            </article>
            {% include "partials/sidebar_menu" with {entry: entry} %}
        </div>
{% endif %}
    {% include 'components/body_builder_basic_page.twig' %}

{% endblock %}

{% block footer %}
    {% cache %}
        {% if entry.footerCallOut|length %}
            {% include 'partials/footer_call_out' with {ctaEntry: entry.footerCallOut.one()} %}
        {% endif %}
        {{ parent() }}
    {% endcache %}
{% endblock %}