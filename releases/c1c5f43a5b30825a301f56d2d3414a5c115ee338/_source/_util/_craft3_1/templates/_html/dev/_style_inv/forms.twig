{# @var craft \craft\web\twig\variables\CraftVariable #}

<% const currentSection = 'forms' %>
<% const modules = [] %>

<% const intro = false %>

<% modules.push({
    "title": "Form Field",
    "description": "Text-based input field. NOTE: all options below are applicable for all form input fields. If `format`, `validate`, or `vue` are passed in, the field will switch over to a Vue component.",
    "background": "light",
    "twigCode":
`{% import 'macros/component.twig' as component %}
<form class="c_form">
    {{ component.c('form_input', { label: 'Text Input', name: 'text_input', type: 'text' }) }}
</form>`,
    "options": [
        { "name": 'format', "required": false, "type": 'string', "default": `false`, "description": `Formats text-like inputs in the format given. Accepts: tel, zip` },
        { "name": 'inputAttributes', "required": false, "type": 'string', "description": `Attributes added to the input element withing the component.` },
        { "name": 'inputClasses', "required": false, "type": 'string', "description": `Classes added to the input element withing the component.` },
        { "name": 'label', "required": false, "type": 'string', "description": `Text used for the field label.` },
        { "name": 'name', "required": true, "type": 'string', "description": `The name attribute of the form field.` },
        { "name": 'placeholder', "required": false, "type": 'string', "description": `Text ` },
        { "name": 'required', "required": false, "type": 'boolean', "default": `false`, "description": `Adds a required attribute to the input field.` },
        { "name": 'type', "required": true, "type": 'string', "description": `The field type as per HTML input spec.` },
        { "name": 'format', "required": false, "type": 'string', "default": `false`, "description": `Validates field against the format given. Accepts: email, tel, text, zip` },
        { "name": 'value', "required": false, "type": 'string', "description": `Default value for the field.` }
    ]
}); %>

<% modules.push({
    "title": "Text Area Field",
    "description": "Input field for longer text.",
    "background": "light",
    "twigCode":
`{% import 'macros/component.twig' as component %}
<form class="c_form">
    {{ component.c('form_input', { label: 'Text Area', name: 'textarea', type: 'textarea' }) }}
</form>`
}); %>

<% modules.push({
    "title": "Formatted Form Field",
    "description": "Automatically formats a field input based on field type.",
    "background": "light",
    "twigCode":
`{% import 'macros/component.twig' as component %}
<form class="c_form">
    {{ component.c('form_input', { label: 'Formatted Phone Input', name: 'formatted_input', type: 'tel', format: 'tel' }) }}
</form>`
}); %>

<% modules.push({
    "title": "Invalid Form Field",
    "description": "Style for when an input field is not correctly filled out based on HTML5 type validation.",
    "background": "light",
    "twigCode":
`{% import 'macros/component.twig' as component %}
<form class="c_form">
    {{ component.c('form_input', { label: 'Invalid Input', name: 'invalid_input', type: 'email', validate: 'email', value: 'hello not an email' }) }}
</form>`
}); %>

<% modules.push({
    "title": "Submit Button",
    "description": "A single submit button with no wrapper.",
    "background": "light",
    "twigCode":
`{% import 'macros/component.twig' as component %}
<form class="c_form">
    {{ component.c('form_input', { type: 'submit', value: 'Send' }) }}
</form>`
}); %>

<% modules.push({
    "title": "Example Form with Validation",
    "description": "A basic contact form example.",
    "background": "light",
    "twigCode":
`{% import 'macros/component.twig' as component %}
{{ component.c('form', {
    fields: [
        { label: 'Name', name: 'name', type: 'text', validate: 'text', required: true },
        { label: 'Phone', name: 'phone', type: 'tel', format: 'tel', validate: 'tel', required: true },
        { label: 'Email', name: 'email', type: 'email', validate: 'email', required: true },
        { label: 'ZIP', name: 'zip', type: 'text', format: 'zip', validate: 'zip', required: true },
        { label: 'Comments', name: 'comments', type: 'textarea', validate: 'text' },
        { type: 'submit', value: 'Send' },
    ],
    formId: 'example_form',
    validate: true,
}) }}`,
    "options": [
        { "name": 'format', "required": false, "type": 'string', "default": `false`, "description": `Formats text-like inputs in the format given. Accepts: tel, zip` },
        { "name": 'inputAttributes', "required": false, "type": 'string', "description": `Attributes added to the input element withing the component.` },
        { "name": 'inputClasses', "required": false, "type": 'string', "description": `Classes added to the input element withing the component.` },
        { "name": 'label', "required": false, "type": 'string', "description": `Text used for the field label.` },
        { "name": 'name', "required": true, "type": 'string', "description": `The name attribute of the form field.` },
        { "name": 'placeholder', "required": false, "type": 'string', "description": `Text ` },
        { "name": 'required', "required": false, "type": 'boolean', "default": `false`, "description": `Adds a required attribute to the input field.` },
        { "name": 'type', "required": true, "type": 'string', "description": `The field type as per HTML input spec.` },
        { "name": 'format', "required": false, "type": 'string', "default": `false`, "description": `Validates field against the format given. Accepts: email, tel, text, zip` },
        { "name": 'value', "required": false, "type": 'string', "description": `Default value for the field.` }
    ]
}); %>

<%- include('../../ejs_includes/style_inventory/_wrapper', {"activeItem": currentSection, "intro": intro, "modules": modules}) %>